Task
Given a Book class and a Solution class, write a MyBook class that does the following:

Inherits from a Book
Has a parameterized constructor taking these 3 parameters:
string title
string author
int price
Implements the Book class' abstract display() method so it prints these 3 lines:
Title:, a space, and then the current instance's title.
Author:, a space, and then the current instance's author.
Price:, a space, and then the current instance's price.
Input Format
The Solution class creates a Book object and calls the MyBook class constructor. It then calls the display method on the Book object.

Output Format
The display() method should print and label the respective title, author, and price of the MyBook object's instance like so:
           CODE
           
           
 from abc import ABCMeta, abstractmethod
class Book(object, metaclass=ABCMeta):
    def __init__(self,title,author):
        self.title=title
        self.author=author   
    def display(): pass

#Write MyBook class
class MyBook(Book):
    def __init__(self, title, author, price):
        Book.__init__(self, title, author)
        self.price = price

    def display(self):
        print('Title: ' + self.title)
        print('Author: ' + self.author)
        print('Price: ' + str(self.price))


title=input() 

price=int(input())
new_novel=MyBook(title,author,price)
new_novel.display()
